#! /bin/sh

# Run PCRE tests

cf="diff -u"
valgrind=
testdata=testdata

if [ -n "$srcdir" -a -d "$srcdir" ] ; then
  testdata="$srcdir/testdata"
fi

# Find which optional facilities are available

case `./pcretest -C | ./pcregrep 'Internal link size'` in
  *2) link_size=2;;
  *3) link_size=3;;
  *4) link_size=4;;
   *) echo "Failed to find internal link size"; exit 1;;
esac

./pcretest -C | ./pcregrep 'No UTF-8 support' >/dev/null
utf8=$?

./pcretest -C | ./pcregrep 'No Unicode properties support' >/dev/null
ucp=$?

# Select which tests to run; for those that are explicitly requested, check
# that the necessary optional facilities are available.

do1=no
do2=no
do3=no
do4=no
do5=no
do6=no
do7=no
do8=no
do9=no

while [ $# -gt 0 ] ; do
  case $1 in
    1) do1=yes;;
    2) do2=yes;;
    3) do3=yes;;
    4) do4=yes;;
    5) do5=yes;;
    6) do6=yes;;
    7) do7=yes;;
    8) do8=yes;;
    9) do9=yes;;
    valgrind) valgrind="valgrind -q";;
    *) echo "Unknown test number $1"; exit 1;;
  esac
  shift
done

if [ "$link_size" != "2" ] ; then
  if [ $do2 = yes ] ; then
    echo "Can't run test 2 with an internal link size other than 2"
    exit 1
  fi
  if [ $do5 = yes ] ; then
    echo "Can't run test 5 with an internal link size other than 2"
    exit 1
  fi
  if [ $do6 = yes ] ; then
    echo "Can't run test 6 with an internal link size other than 2"
    exit 1
  fi
fi

if [ $utf8 -eq 0 ] ; then
  if [ $do4 = yes ] ; then
    echo "Can't run test 4 because UTF-8 support is not configured"
    exit 1
  fi
  if [ $do5 = yes ] ; then
    echo "Can't run test 5 because UTF-8 support is not configured"
    exit 1
  fi
  if [ $do6 = yes ] ; then
    echo "Can't run test 6 because UTF-8 support is not configured"
    exit 1
  fi
  if [ $do8 = yes ] ; then
    echo "Can't run test 8 because UTF-8 support is not configured"
    exit 1
  fi
  if [ $do9 = yes ] ; then
    echo "Can't run test 9 because UTF-8 support is not configured"
    exit 1
  fi
fi

if [ $ucp -eq 0 ] ; then
  if [ $do6 = yes ] ; then
    echo "Can't run test 6 because Unicode property support is not configured"
    exit 1
  fi
  if [ $do9 = yes ] ; then
    echo "Can't run test 9 because Unicode property support is not configured"
    exit 1
  fi
fi

# If no specific tests were requested, select all that are relevant.

if [ $do1 = no -a $do2 = no -a $do3 = no -a $do4 = no -a \
     $do5 = no -a $do6 = no -a $do7 = no -a $do8 = no -a \
     $do9 = no ] ; then
  do1=yes
  do2=yes
  do3=yes
  if [ $utf8 -ne 0 ] ; then do4=yes; fi
  if [ $utf8 -ne 0 ] ; then do5=yes; fi
  if [ $utf8 -ne 0 -a $ucp -ne 0 ] ; then do6=yes; fi
  do7=yes
  if [ $utf8 -ne 0 ] ; then do8=yes; fi
  if [ $utf8 -ne 0 -a $ucp -ne 0 ] ; then do9=yes; fi
fi

# Show which release

echo ""
echo PCRE C library tests
./pcretest /dev/null

# Primary test, Perl-compatible

if [ $do1 = yes ] ; then
  echo "Test 1: main functionality (Perl compatible)"
  $valgrind ./pcretest -q $testdata/testinput1 testtry
  if [ $? = 0 ] ; then
    $cf testtry $testdata/testoutput1
    if [ $? != 0 ] ; then exit 1; fi
  else exit 1
  fi
  echo "OK"
fi

# PCRE tests that are not Perl-compatible - API & error tests, mostly

if [ $do2 = yes ] ; then
  if [ "$link_size" = "2" ] ; then
    echo "Test 2: API and error handling (not Perl compatible)"
    $valgrind ./pcretest -q $testdata/testinput2 testtry
    if [ $? = 0 ] ; then
      $cf testtry $testdata/testoutput2
      if [ $? != 0 ] ; then exit 1; fi
    else exit 1
    fi
    echo "OK"
  else
    echo Test 2 skipped for link size other than 2 \($link_size\)
    echo " "
  fi
fi

# Locale-specific tests, provided the "fr_FR" locale is available.
# TODO: Try the locale name "french" instead - as used on Windows - but
# this will mean modifying the input and output data.

if [ $do3 = yes ] ; then
  locale -a | grep '^fr_FR$' >/dev/null
  if [ $? -eq 0 ] ; then
    echo "Test 3: locale-specific features (using 'fr_FR' locale)"
    $valgrind ./pcretest -q $testdata/testinput3 testtry
    if [ $? = 0 ] ; then
      $cf testtry $testdata/testoutput3
      if [ $? != 0 ] ; then
        echo " "
        echo "Locale test did not run entirely successfully."
        echo "This usually means that there is a problem with the locale"
        echo "settings rather than a bug in PCRE."
      else
      echo "OK"
      fi
    else exit 1
    fi
  else
    echo "Cannot test locale-specific features - 'fr_FR' locale not found,"
    echo "or the \"locale\" command is not available to check for it."
    echo " "
  fi
fi

# Additional tests for UTF8 support

if [ $do4 = yes ] ; then
  echo "Test 4: UTF-8 support (Perl compatible)"
  $valgrind ./pcretest -q $testdata/testinput4 testtry
  if [ $? = 0 ] ; then
    $cf testtry $testdata/testoutput4
    if [ $? != 0 ] ; then exit 1; fi
  else exit 1
  fi
  echo "OK"
fi

if [ $do5 = yes ] ; then
  if [ "$link_size" = "2" ] ; then
    echo "Test 5: API and internals for UTF-8 support (not Perl compatible)"
    $valgrind ./pcretest -q $testdata/testinput5 testtry
    if [ $? = 0 ] ; then
      $cf testtry $testdata/testoutput5
      if [ $? != 0 ] ; then exit 1; fi
    else exit 1
    fi
    echo "OK"
  else
    echo Test 5 skipped for link size other than 2 \($link_size\)
    echo " "
  fi
fi

if [ $do6 = yes ] ; then
  if [ "$link_size" = "2" ] ; then
    echo "Test 6: Unicode property support"
    $valgrind ./pcretest -q $testdata/testinput6 testtry
    if [ $? = 0 ] ; then
      $cf testtry $testdata/testoutput6
      if [ $? != 0 ] ; then exit 1; fi
    else exit 1
    fi
    echo "OK"
  else
    echo Test 6 skipped for link size other than 2 \($link_size\)
    echo " "
  fi
fi

# Tests for DFA matching support

if [ $do7 = yes ] ; then
  echo "Test 7: DFA matching"
  $valgrind ./pcretest -q -dfa $testdata/testinput7 testtry
  if [ $? = 0 ] ; then
    $cf testtry $testdata/testoutput7
    if [ $? != 0 ] ; then exit 1; fi
  else exit 1
  fi
  echo "OK"
fi

if [ $do8 = yes ] ; then
  echo "Test 8: DFA matching with UTF-8"
  $valgrind ./pcretest -q -dfa $testdata/testinput8 testtry
  if [ $? = 0 ] ; then
    $cf testtry $testdata/testoutput8
    if [ $? != 0 ] ; then exit 1; fi
  else exit 1
  fi
  echo "OK"
fi

if [ $do9 = yes ] ; then
  echo "Test 9: DFA matching with Unicode properties"
  $valgrind ./pcretest -q -dfa $testdata/testinput9 testtry
  if [ $? = 0 ] ; then
    $cf testtry $testdata/testoutput9
    if [ $? != 0 ] ; then exit 1; fi
  else exit 1
  fi
  echo "OK"
fi

# End
